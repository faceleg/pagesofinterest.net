# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci # or yarn install
      - uses: sibiraj-s/action-eslint@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # optional
          eslint-args: '--ignore-path=.gitignore --quiet'
          extensions: 'js,jsx,ts,tsx'
          annotations: true
  # Build job
  build:
    runs-on: ubuntu-latest
    # container:
    #   image: ghcr.io/faceleg/jekyll-gh-pages-custom-plugins:main
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Install libs
      - name: Update apt
        env:
          DEBIAN_FRONTEND: noninteractive
        run: 
          sudo apt-get update -qq -o Acquire::Retries=3

      - name: Install libvips
        env:
          DEBIAN_FRONTEND: noninteractive
        run:
          # we only need the library
          sudo apt-get install --fix-missing -qq -o Acquire::Retries=3
            libvips

      # Setup languages
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          ruby-version: 3.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
        run: npm install
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Build pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Bundle Install
        run: bundle install
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
